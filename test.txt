NAME: chart-1660309931
LAST DEPLOYED: Fri Aug 12 13:12:12 2022
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
kubernetes:
  serviceAccount: wso2am-pattern-1-svc-account
mysql-am:
  mysql:
    persistence:
      storageClass: nfs
wso2:
  choreoAnalytics:
    enabled: false
    endpoint: ""
    onpremKey: ""
  deployment:
    am:
      imageName: wso2am
      imagePullPolicy: Always
      imageTag: 4.1.0
      ingress:
        gateway:
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          enabled: true
          hostname: gateway.am.wso2.com
        management:
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/affinity: cookie
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/session-cookie-hash: sha1
            nginx.ingress.kubernetes.io/session-cookie-name: route
          enabled: true
          hostname: am.wso2.com
        websub:
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          enabled: true
          hostname: websub.am.wso2.com
      livenessProbe:
        initialDelaySeconds: 180
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 180
        periodSeconds: 10
      resources:
        jvm:
          heap:
            memory:
              xms: 1024m
              xmx: 1024m
        limits:
          cpu: 3000m
          memory: 3Gi
        requests:
          cpu: 2000m
          memory: 2Gi
    dependencies:
      mysql: true
      nfsServerProvisioner: true
    mi:
      envs: null
      imageName: wso2mi
      imageTag: 4.1.0
      ingress:
        management:
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          hostname: management.mi.wso2.com
      livenessProbe:
        initialDelaySeconds: 35
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 35
        periodSeconds: 10
      replicas: 2
      resources:
        limits:
          cpu: 1000m
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
      synapseTest:
        enabled: false
    persistentRuntimeArtifacts:
      apacheSolrIndexing:
        capacity:
          carbonDatabase: 50M
          solrIndexedData: 50M
        enabled: false
      storageClass: nfs
  subscription:
    password: ""
    username: ""

HOOKS:
MANIFEST:
---
# Source: am-pattern-1/templates/wso2am-pattern-1-service-account.yaml
# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: wso2am-pattern-1-svc-account
  namespace : default
---
# Source: am-pattern-1/templates/am/instance-1/wso2am-pattern-1-am-conf.yaml
# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: wso2am-pattern-1-am-1-conf
  namespace : default
  
data:
  deployment.toml: |-
    [server]
    hostname = "am.wso2.com"
    #offset=0
    base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
    #discard_empty_caches = false
    server_role = "default"

    [super_admin]
    username = "admin"
    password = "admin"
    create_admin_account = true

    [user_store]
    type = "database_unique_id"

    [database.apim_db]
    type = "mysql"
    url = "jdbc:mysql://wso2am-mysql-db-service:3306/WSO2AM_DB?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [database.shared_db]
    type = "mysql"
    url = "jdbc:mysql://wso2am-mysql-db-service:3306/WSO2AM_SHARED_DB?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [keystore.tls]
    file_name =  "wso2carbon.jks"
    type =  "JKS"
    password =  "wso2carbon"
    alias =  "wso2carbon"
    key_password =  "wso2carbon"

    #[keystore.listener_profile]	
    #bind_address = "0.0.0.0"

    #[keystore.primary]
    #file_name =  "wso2carbon.jks"
    #type =  "JKS"
    #password =  "wso2carbon"
    #alias =  "wso2carbon"
    #key_password =  "wso2carbon"

    #[keystore.internal]
    #file_name =  "wso2carbon.jks"
    #type =  "JKS"
    #password =  "wso2carbon"
    #alias =  "wso2carbon"
    #key_password =  "wso2carbon"

    [[apim.gateway.environment]]
    name = "Default"
    type = "hybrid"
    provider = "wso2"
    display_in_api_console = true
    description = "This is a hybrid gateway that handles both production and sandbox token traffic."
    show_as_token_endpoint_url = true
    service_url = "https://localhost:${mgt.transport.https.port}/services/"
    username= "${admin.username}"
    password= "${admin.password}"
    ws_endpoint = "ws://localhost:9099"
    wss_endpoint = "wss://localhost:8099"
    http_endpoint = "http://gateway.am.wso2.com"
    https_endpoint = "https://gateway.am.wso2.com"
    websub_event_receiver_http_endpoint = "http://websub.am.wso2.com"
    websub_event_receiver_https_endpoint = "https://websub.am.wso2.com"

    [apim.sync_runtime_artifacts.gateway]
    gateway_labels =["Default"]

    #[apim.cache.gateway_token]
    #enable = true
    #expiry_time = "900s"

    #[apim.cache.resource]
    #enable = true
    #expiry_time = "900s"

    #[apim.cache.km_token]
    #enable = false
    #expiry_time = "15m"

    #[apim.cache.recent_apis]
    #enable = false

    #[apim.cache.scopes]
    #enable = true

    #[apim.cache.publisher_roles]
    #enable = true

    #[apim.cache.jwt_claim]
    #enable = true
    #expiry_time = "15m"

    #[apim.cache.tags]
    #expiry_time = "2m"

    
    [apim.analytics]
    enable = false
    config_endpoint = "https://analytics-event-auth.choreo.dev/auth/v1"
    auth_token = ""
    

    #[apim.key_manager]
    #service_url = "https://localhost:${mgt.transport.https.port}/services/"
    #username = "$ref{super_admin.username}"
    #password = "$ref{super_admin.password}"
    #pool.init_idle_capacity = 50
    #pool.max_idle = 100
    #key_validation_handler_type = "default"
    #key_validation_handler_type = "custom"
    #key_validation_handler_impl = "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler"

    #[apim.idp]
    #server_url = "https://localhost:${mgt.transport.https.port}"
    #authorize_endpoint = "https://localhost:${mgt.transport.https.port}/oauth2/authorize"
    #oidc_logout_endpoint = "https://localhost:${mgt.transport.https.port}/oidc/logout"
    #oidc_check_session_endpoint = "https://localhost:${mgt.transport.https.port}/oidc/checksession"

    #[apim.jwt]
    #enable = true
    #encoding = "base64" # base64,base64url
    #generator_impl = "org.wso2.carbon.apimgt.keymgt.token.JWTGenerator"
    #claim_dialect = "http://wso2.org/claims"
    #convert_dialect = false
    #header = "X-JWT-Assertion"
    #signing_algorithm = "SHA256withRSA"
    #enable_user_claims = true
    #claims_extractor_impl = "org.wso2.carbon.apimgt.impl.token.ExtendedDefaultClaimsRetriever"

    #[apim.oauth_config]
    #enable_outbound_auth_header = false
    #auth_header = "Authorization"
    #revoke_endpoint = "https://localhost:${https.nio.port}/revoke"
    #enable_token_encryption = false
    #enable_token_hashing = false

    [apim.devportal]
    url = "https://am.wso2.com/devportal"
    #enable_application_sharing = false
    #if application_sharing_type, application_sharing_impl both defined priority goes to application_sharing_impl
    #application_sharing_type = "default" #changed type, saml, default #todo: check the new config for rest api
    #application_sharing_impl = "org.wso2.carbon.apimgt.impl.SAMLGroupIDExtractorImpl"
    #display_multiple_versions = false
    #display_deprecated_apis = false
    #enable_comments = true
    #enable_ratings = true
    #enable_forum = true
    #enable_anonymous_mode=true
    #enable_cross_tenant_subscriptions = true
    #default_reserved_username = "apim_reserved_user"

    [apim.cors]
    allow_origins = "*"
    allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
    allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey","Internal-Key"]
    allow_credentials = false

    [apim.throttling]
    event_duplicate_url = ["tcp://wso2am-pattern-1-am-2-service:5672"]
    #enable_data_publishing = true
    #enable_policy_deploy = true
    #enable_blacklist_condition = true
    #enable_persistence = true
    #throttle_decision_endpoints = ["tcp://localhost:5672","tcp://localhost:5672"]

    #[apim.throttling.blacklist_condition]
    #start_delay = "5m"
    #period = "1h"

    #[apim.throttling.jms]
    #start_delay = "5m"

    #[apim.throttling.event_sync]
    #hostName = "0.0.0.0"
    #port = 11224

    #[apim.throttling.event_management]
    #hostName = "0.0.0.0"
    #port = 10005

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://wso2am-pattern-1-am-1-service:9611"]
    traffic_manager_auth_urls = ["ssl://wso2am-pattern-1-am-1-service:9711"]
    type = "loadbalance"

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://wso2am-pattern-1-am-2-service:9611"]
    traffic_manager_auth_urls = ["ssl://wso2am-pattern-1-am-2-service:9711"]
    type = "loadbalance"

    #[apim.workflow]
    #enable = false
    #service_url = "https://localhost:9445/bpmn"
    #username = "$ref{super_admin.username}"
    #password = "$ref{super_admin.password}"
    #callback_endpoint = "https://localhost:${mgt.transport.https.port}/api/am/admin/v0.17/workflows/update-workflow-status"
    #token_endpoint = "https://localhost:${https.nio.port}/token"
    #client_registration_endpoint = "https://localhost:${mgt.transport.https.port}/client-registration/v0.17/register"
    #client_registration_username = "$ref{super_admin.username}"
    #client_registration_password = "$ref{super_admin.password}"

    #data bridge config
    #[transport.receiver]
    #type = "binary"
    #worker_threads = 10
    #session_timeout = "30m"
    #keystore.file_name = "$ref{keystore.tls.file_name}"
    #keystore.password = "$ref{keystore.tls.password}"
    #tcp_port = 9611
    #ssl_port = 9711
    #ssl_receiver_thread_pool_size = 100
    #tcp_receiver_thread_pool_size = 100
    #ssl_enabled_protocols = ["TLSv1","TLSv1.1","TLSv1.2"]
    #ciphers = ["SSL_RSA_WITH_RC4_128_MD5","SSL_RSA_WITH_RC4_128_SHA"]

    #[apim.notification]
    #from_address = "APIM.com"
    #username = "APIM"
    #password = "APIM+123"
    #hostname = "localhost"
    #port = 3025
    #enable_start_tls = false
    #enable_authentication = true

    #[apim.token.revocation]
    #notifier_impl = "org.wso2.carbon.apimgt.keymgt.events.TokenRevocationNotifierImpl"
    #enable_realtime_notifier = true
    #realtime_notifier.ttl = 5000
    #enable_persistent_notifier = true
    #persistent_notifier.hostname = "https://localhost:2379/v2/keys/jti/"
    #persistent_notifier.ttl = 5000
    #persistent_notifier.username = "root"
    #persistent_notifier.password = "root"

    [[event_handler]]
    name="userPostSelfRegistration"
    subscriptions=["POST_ADD_USER"]

    [service_provider]
    sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

    [[event_listener]]
    id = "token_revocation"
    type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
    name = "org.wso2.is.notification.ApimOauthEventInterceptor"
    order = 1
    [event_listener.properties]
    notification_endpoint = "https://localhost:${mgt.transport.https.port}/internal/data/v1/notify"
    username = "${admin.username}"
    password = "${admin.password}"
    'header.X-WSO2-KEY-MANAGER' = "default"

    [transport.https.properties]
    proxyPort = 443

    [oauth.grant_type.token_exchange]	
    enable = true	
    allow_refresh_tokens = true	
    iat_validity_period = "1h"

    [transport.passthru_https.sender.parameters]
    HostnameVerifier = "AllowAll"

    
    [database.local]
    url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"
---
# Source: am-pattern-1/templates/am/instance-2/wso2am-pattern-1-am-conf.yaml
# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: wso2am-pattern-1-am-2-conf
  namespace : default
  
data:
  deployment.toml: |-
    [server]
    hostname = "am.wso2.com"
    #offset=0
    base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
    #discard_empty_caches = false
    server_role = "default"

    [super_admin]
    username = "admin"
    password = "admin"
    create_admin_account = true

    [user_store]
    type = "database_unique_id"

    [database.apim_db]
    type = "mysql"
    url = "jdbc:mysql://wso2am-mysql-db-service:3306/WSO2AM_DB?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [database.shared_db]
    type = "mysql"
    url = "jdbc:mysql://wso2am-mysql-db-service:3306/WSO2AM_SHARED_DB?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [keystore.tls]
    file_name =  "wso2carbon.jks"
    type =  "JKS"
    password =  "wso2carbon"
    alias =  "wso2carbon"
    key_password =  "wso2carbon"

    #[keystore.listener_profile]		
    #bind_address = "0.0.0.0"

    #[keystore.primary]
    #file_name =  "wso2carbon.jks"
    #type =  "JKS"
    #password =  "wso2carbon"
    #alias =  "wso2carbon"
    #key_password =  "wso2carbon"

    #[keystore.internal]
    #file_name =  "wso2carbon.jks"
    #type =  "JKS"
    #password =  "wso2carbon"
    #alias =  "wso2carbon"
    #key_password =  "wso2carbon"

    [[apim.gateway.environment]]
    name = "Default"
    type = "hybrid"
    provider = "wso2"
    display_in_api_console = true
    description = "This is a hybrid gateway that handles both production and sandbox token traffic."
    show_as_token_endpoint_url = true
    service_url = "https://localhost:${mgt.transport.https.port}/services/"
    username= "${admin.username}"
    password= "${admin.password}"
    ws_endpoint = "ws://localhost:9099"
    wss_endpoint = "wss://localhost:8099"
    http_endpoint = "http://gateway.am.wso2.com"
    https_endpoint = "https://gateway.am.wso2.com"
    websub_event_receiver_http_endpoint = "http://websub.am.wso2.com"
    websub_event_receiver_https_endpoint = "https://websub.am.wso2.com"

    [apim.sync_runtime_artifacts.gateway]
    gateway_labels =["Default"]

    #[apim.cache.gateway_token]
    #enable = true
    #expiry_time = "900s"

    #[apim.cache.resource]
    #enable = true
    #expiry_time = "900s"

    #[apim.cache.km_token]
    #enable = false
    #expiry_time = "15m"

    #[apim.cache.recent_apis]
    #enable = false

    #[apim.cache.scopes]
    #enable = true

    #[apim.cache.publisher_roles]
    #enable = true

    #[apim.cache.jwt_claim]
    #enable = true
    #expiry_time = "15m"

    #[apim.cache.tags]
    #expiry_time = "2m"

    
    [apim.analytics]
    enable = false
    config_endpoint = "https://analytics-event-auth.choreo.dev/auth/v1"
    auth_token = ""
    

    #[apim.key_manager]
    #service_url = "https://localhost:${mgt.transport.https.port}/services/"
    #username = "$ref{super_admin.username}"
    #password = "$ref{super_admin.password}"
    #pool.init_idle_capacity = 50
    #pool.max_idle = 100
    #key_validation_handler_type = "default"
    #key_validation_handler_type = "custom"
    #key_validation_handler_impl = "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler"

    #[apim.idp]
    #server_url = "https://localhost:${mgt.transport.https.port}"
    #authorize_endpoint = "https://localhost:${mgt.transport.https.port}/oauth2/authorize"
    #oidc_logout_endpoint = "https://localhost:${mgt.transport.https.port}/oidc/logout"
    #oidc_check_session_endpoint = "https://localhost:${mgt.transport.https.port}/oidc/checksession"

    #[apim.jwt]
    #enable = true
    #encoding = "base64" # base64,base64url
    #generator_impl = "org.wso2.carbon.apimgt.keymgt.token.JWTGenerator"
    #claim_dialect = "http://wso2.org/claims"
    #convert_dialect = false
    #header = "X-JWT-Assertion"
    #signing_algorithm = "SHA256withRSA"
    #enable_user_claims = true
    #claims_extractor_impl = "org.wso2.carbon.apimgt.impl.token.ExtendedDefaultClaimsRetriever"

    #[apim.oauth_config]
    #enable_outbound_auth_header = false
    #auth_header = "Authorization"
    #revoke_endpoint = "https://localhost:${https.nio.port}/revoke"
    #enable_token_encryption = false
    #enable_token_hashing = false

    [apim.devportal]
    url = "https://am.wso2.com/devportal"
    #enable_application_sharing = false
    #if application_sharing_type, application_sharing_impl both defined priority goes to application_sharing_impl
    #application_sharing_type = "default" #changed type, saml, default #todo: check the new config for rest api
    #application_sharing_impl = "org.wso2.carbon.apimgt.impl.SAMLGroupIDExtractorImpl"
    #display_multiple_versions = false
    #display_deprecated_apis = false
    #enable_comments = true
    #enable_ratings = true
    #enable_forum = true
    #enable_anonymous_mode=true
    #enable_cross_tenant_subscriptions = true
    #default_reserved_username = "apim_reserved_user"

    [apim.cors]
    allow_origins = "*"
    allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
    allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey","Internal-Key"]
    allow_credentials = false

    [apim.throttling]
    event_duplicate_url = ["tcp://wso2am-pattern-1-am-1-service:5672"]
    #enable_data_publishing = true
    #enable_policy_deploy = true
    #enable_blacklist_condition = true
    #enable_persistence = true
    #throttle_decision_endpoints = ["tcp://localhost:5672","tcp://localhost:5672"]

    #[apim.throttling.blacklist_condition]
    #start_delay = "5m"
    #period = "1h"

    #[apim.throttling.jms]
    #start_delay = "5m"

    #[apim.throttling.event_sync]
    #hostName = "0.0.0.0"
    #port = 11224

    #[apim.throttling.event_management]
    #hostName = "0.0.0.0"
    #port = 10005

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://wso2am-pattern-1-am-2-service:9611"]
    traffic_manager_auth_urls = ["ssl://wso2am-pattern-1-am-2-service:9711"]
    type = "loadbalance"

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://wso2am-pattern-1-am-1-service:9611"]
    traffic_manager_auth_urls = ["ssl://wso2am-pattern-1-am-1-service:9711"]
    type = "loadbalance"

    #[apim.workflow]
    #enable = false
    #service_url = "https://localhost:9445/bpmn"
    #username = "$ref{super_admin.username}"
    #password = "$ref{super_admin.password}"
    #callback_endpoint = "https://localhost:${mgt.transport.https.port}/api/am/admin/v0.17/workflows/update-workflow-status"
    #token_endpoint = "https://localhost:${https.nio.port}/token"
    #client_registration_endpoint = "https://localhost:${mgt.transport.https.port}/client-registration/v0.17/register"
    #client_registration_username = "$ref{super_admin.username}"
    #client_registration_password = "$ref{super_admin.password}"

    #data bridge config
    #[transport.receiver]
    #type = "binary"
    #worker_threads = 10
    #session_timeout = "30m"
    #keystore.file_name = "$ref{keystore.tls.file_name}"
    #keystore.password = "$ref{keystore.tls.password}"
    #tcp_port = 9611
    #ssl_port = 9711
    #ssl_receiver_thread_pool_size = 100
    #tcp_receiver_thread_pool_size = 100
    #ssl_enabled_protocols = ["TLSv1","TLSv1.1","TLSv1.2"]
    #ciphers = ["SSL_RSA_WITH_RC4_128_MD5","SSL_RSA_WITH_RC4_128_SHA"]

    #[apim.notification]
    #from_address = "APIM.com"
    #username = "APIM"
    #password = "APIM+123"
    #hostname = "localhost"
    #port = 3025
    #enable_start_tls = false
    #enable_authentication = true

    #[apim.token.revocation]
    #notifier_impl = "org.wso2.carbon.apimgt.keymgt.events.TokenRevocationNotifierImpl"
    #enable_realtime_notifier = true
    #realtime_notifier.ttl = 5000
    #enable_persistent_notifier = true
    #persistent_notifier.hostname = "https://localhost:2379/v2/keys/jti/"
    #persistent_notifier.ttl = 5000
    #persistent_notifier.username = "root"
    #persistent_notifier.password = "root"

    [[event_handler]]
    name="userPostSelfRegistration"
    subscriptions=["POST_ADD_USER"]

    [service_provider]
    sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

    [[event_listener]]
    id = "token_revocation"
    type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
    name = "org.wso2.is.notification.ApimOauthEventInterceptor"
    order = 1
    [event_listener.properties]
    notification_endpoint = "https://localhost:${mgt.transport.https.port}/internal/data/v1/notify"
    username = "${admin.username}"
    password = "${admin.password}"
    'header.X-WSO2-KEY-MANAGER' = "default"

    [transport.https.properties]
    proxyPort = 443

    [oauth.grant_type.token_exchange]		
    enable = true		
    allow_refresh_tokens = true		
    iat_validity_period = "1h"	

    [transport.passthru_https.sender.parameters]
    HostnameVerifier = "AllowAll"

    
    [database.local]
    url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"
---
# Source: am-pattern-1/templates/am/instance-1/wso2am-pattern-1-am-service.yaml
# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: wso2am-pattern-1-am-1-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    deployment: wso2am-pattern-1-am
    node: wso2am-pattern-1-am-1
  ports:
    # ports that this service should serve on
    - name: binary
      protocol: TCP
      port: 9611
    - name: binary-secure
      protocol: TCP
      port: 9711
    - name: jms-tcp
      protocol: TCP
      port: 5672
    - name: servlet-https
      protocol: TCP
      port: 9443
---
# Source: am-pattern-1/templates/am/instance-2/wso2am-pattern-1-am-service.yaml
# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: wso2am-pattern-1-am-2-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    deployment: wso2am-pattern-1-am
    node: wso2am-pattern-1-am-2
  ports:
    # ports that this service should serve on
    - name: binary
      protocol: TCP
      port: 9611
    - name: binary-secure
      protocol: TCP
      port: 9711
    - name: jms-tcp
      protocol: TCP
      port: 5672
    - name: servlet-https
      protocol: TCP
      port: 9443
---
# Source: am-pattern-1/templates/am/wso2am-pattern-1-am-service.yaml
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: wso2am-pattern-1-am-service
  namespace : default
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    deployment: wso2am-pattern-1-am
  ports:
    # ports that this service should serve on
    - name: pass-through-http
      protocol: TCP
      port: 8280
    - name: pass-through-https
      protocol: TCP
      port: 8243
    - name: servlet-http
      protocol: TCP
      port: 9763
    - name: servlet-https
      protocol: TCP
      port: 9443
    - name: websub-http
      protocol: TCP
      port: 9021
    - name: websub-https
      protocol: TCP
      port: 8021
---
# Source: am-pattern-1/templates/mi/instance-1/wso2am-pattern-1-mi-service.yaml
# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: Service
metadata:
  name: wso2am-pattern-1-mi-1-service
  namespace : default
  labels:
    deployment: wso2am-pattern-1-mi
    node: wso2am-pattern-1-mi-1
    app.kubernetes.io/name: am-pattern-1
    helm.sh/chart: am-pattern-1-4.1.0-1
    app.kubernetes.io/instance: chart-1660309931
    app.kubernetes.io/version: "4.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8290
      targetPort: 8290
      protocol: TCP
      name: pass-through-http
    - port: 8253
      targetPort: 8253
      protocol: TCP
      name: pass-through-https
    - port: 9201
      targetPort: 9201
      protocol: TCP
      name: metrics
    - port: 9164
      targetPort: 9164
      protocol: TCP
      name: management
  selector:
    deployment: wso2am-pattern-1-mi
    node: wso2am-pattern-1-mi-1
---
# Source: am-pattern-1/templates/am/instance-1/wso2am-pattern-1-am-deployment.yaml
# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2am-pattern-1-am-1-deployment
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: wso2am-pattern-1-am
      node: wso2am-pattern-1-am-1
  template:
    metadata:
      annotations:
        checksum.am.conf: 6709585922574ed64ad57c7a1f2d788ee51265d7b45a9a829537fafdf439cf6e
      labels:
        deployment: wso2am-pattern-1-am
        node: wso2am-pattern-1-am-1
    spec:
      initContainers:
        
        - name: init-mysql-db
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z "wso2am-mysql-db-service" 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
        - name: init-mysql-connector-download
          image: busybox:1.32
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              connector_version=8.0.17
              wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
          volumeMounts:
            - name: mysql-connector-jar
              mountPath: /mysql-connector-jar
        
      containers:
        - name: wso2am          
          image: wso2/wso2am:4.1.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /services/Version
              port: 9763
            initialDelaySeconds: 180
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /services/Version
              port: 9763
            initialDelaySeconds: 180
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/api-manager.sh stop']
          resources:
            requests:
              memory: 2Gi
              cpu: 2000m
            limits:
              memory: 3Gi
              cpu: 3000m
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 8280
              protocol: "TCP"
            - containerPort: 8243
              protocol: "TCP"
            - containerPort: 9763
              protocol: "TCP"
            - containerPort: 9443
              protocol: "TCP"
            - containerPort: 9711
              protocol: "TCP"
            - containerPort: 9611
              protocol: "TCP"
            - containerPort: 5672
              protocol: "TCP"
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms1024m -Xmx1024m"
          volumeMounts:
            - name: wso2am-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
            
            
            - name: mysql-connector-jar
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/lib
            
      serviceAccountName: wso2am-pattern-1-svc-account
      volumes:
        - name: wso2am-conf
          configMap:
            name: wso2am-pattern-1-am-1-conf
        
        
        - name: mysql-connector-jar
          emptyDir: {}
---
# Source: am-pattern-1/templates/am/instance-2/wso2am-pattern-1-am-deployment.yaml
# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2am-pattern-1-am-2-deployment
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: wso2am-pattern-1-am
      node: wso2am-pattern-1-am-2
  template:
    metadata:
      annotations:
        checksum.am.conf: eae16dc728006cb9ff574c04c75c41c7e3e2f122e476040868b8711af4ed4752
      labels:
        deployment: wso2am-pattern-1-am
        node: wso2am-pattern-1-am-2
    spec:
      initContainers:
        
        - name: init-mysql-db
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z "wso2am-mysql-db-service" 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
        - name: init-mysql-connector-download
          image: busybox:1.32
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              connector_version=8.0.17
              wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
          volumeMounts:
            - name: mysql-connector-jar
              mountPath: /mysql-connector-jar
        
      containers:
        - name: wso2am          
          image: wso2/wso2am:4.1.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /services/Version
              port: 9763
            initialDelaySeconds: 180
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /services/Version
              port: 9763
            initialDelaySeconds: 180
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/api-manager.sh stop']
          resources:
            requests:
              memory: 2Gi
              cpu: 2000m
            limits:
              memory: 3Gi
              cpu: 3000m
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 8280
              protocol: "TCP"
            - containerPort: 8243
              protocol: "TCP"
            - containerPort: 9763
              protocol: "TCP"
            - containerPort: 9443
              protocol: "TCP"
            - containerPort: 9711
              protocol: "TCP"
            - containerPort: 9611
              protocol: "TCP"
            - containerPort: 5672
              protocol: "TCP"
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms1024m -Xmx1024m"
          volumeMounts:
            - name: wso2am-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
            
            
            - name: mysql-connector-jar
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/lib
            
      serviceAccountName: wso2am-pattern-1-svc-account
      volumes:
        - name: wso2am-conf
          configMap:
            name: wso2am-pattern-1-am-2-conf
        
        
        - name: mysql-connector-jar
          emptyDir: {}
---
# Source: am-pattern-1/templates/mi/instance-1/wso2am-pattern-1-mi-deployment.yaml
# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2am-pattern-1-mi-1-deployment
  namespace: default
  labels:
    app.kubernetes.io/name: am-pattern-1
    helm.sh/chart: am-pattern-1-4.1.0-1
    app.kubernetes.io/instance: chart-1660309931
    app.kubernetes.io/version: "4.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2am-pattern-1-mi
      node: wso2am-pattern-1-mi-1
  template:
    metadata:
      labels:
        deployment: wso2am-pattern-1-mi
        node: wso2am-pattern-1-mi-1
    spec:
      initContainers:
        - name: init-am
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of API Manager deployment"; while ! nc -z wso2am-pattern-1-am-service 9443; do sleep 1; printf "-"; done; echo -e "  >> API Manager has started";']
      containers:
        - name: wso2micro-integrator          
          image: wso2/wso2mi:4.1.0
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 8290
            initialDelaySeconds: 35
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9201
            initialDelaySeconds: 35
            periodSeconds: 10
          resources:
            requests:
              memory: 512Mi
              cpu: 500m
            limits:
              memory: 1Gi
              cpu: 1000m
          imagePullPolicy: Always
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 8290
              protocol: TCP
            - containerPort: 9201
              protocol: TCP
            - containerPort: 9164
              protocol: TCP
      serviceAccountName: wso2am-pattern-1-svc-account
---
# Source: am-pattern-1/templates/am/wso2am-pattern-1-am-gateway-ingress.yaml
# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wso2am-pattern-1-am-gateway-ingress
  namespace : default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  tls:
  - hosts:
    - gateway.am.wso2.com
  rules:
  - host: gateway.am.wso2.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: wso2am-pattern-1-am-service
            port:
              number: 8243
---
# Source: am-pattern-1/templates/am/wso2am-pattern-1-am-ingress.yaml
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wso2am-pattern-1-am-ingress
  namespace : default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
spec:
  tls:
    - hosts:
        - am.wso2.com
  rules:
    - host: am.wso2.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wso2am-pattern-1-am-service
                port:
                  number: 9443
---
# Source: am-pattern-1/templates/am/wso2am-pattern-1-am-websub-ingress.yaml
# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wso2am-pattern-1-am-websub-ingress
  namespace : default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  tls:
  - hosts:
    - websub.am.wso2.com
  rules:
  - host: websub.am.wso2.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: wso2am-pattern-1-am-service
            port:
              number: 8021
---
# Source: am-pattern-1/templates/mi/wso2am-pattern-1-mi-management-ingress.yaml
# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wso2am-pattern-1-mi-1-management-ingress
  namespace : default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  tls:
    - hosts:
        - "management.mi.wso2.com"
  rules:
    - host: "management.mi.wso2.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wso2am-pattern-1-mi-1-service
                port:
                  number: 9164
---
# Source: am-pattern-1/templates/am/wso2am-pattern-1-am-volume-claims.yaml
# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

NOTES:
Thank you for installing WSO2 API Manager.

Please follow these steps to access API Manager Publisher and DevPortal consoles.

1. Obtain the external IP (`EXTERNAL-IP`) of the API Manager Ingress resources, by listing down the Kubernetes Ingresses.

  kubectl get ing -n default

  The output under the relevant column stands for the following.

  API Manager Publisher-DevPortal

  - NAME: Metadata name of the Kubernetes Ingress resource (defaults to wso2am-pattern-1-am-ingress)
  - HOSTS: Hostname of the WSO2 API Manager service (am.wso2.com)
  - ADDRESS: External IP (`EXTERNAL-IP`) exposing the API Manager service to outside of the Kubernetes environment
  - PORTS: Externally exposed service ports of the API Manager service

  API Manager Gateway

  - NAME: Metadata name of the Kubernetes Ingress resource (defaults to wso2am-pattern-1-am-gateway-ingress)
  - HOSTS: Hostname of the WSO2 API Manager's Gateway service (gateway.am.wso2.com)
  - ADDRESS: External IP (`EXTERNAL-IP`) exposing the API Manager's Gateway service to outside of the Kubernetes environment
  - PORTS: Externally exposed service ports of the API Manager' Gateway service

2. Add a DNS record mapping the hostnames (in step 1) and the external IP.

   If the defined hostnames (in step 1) are backed by a DNS service, add a DNS record mapping the hostnames and
   the external IP (`EXTERNAL-IP`) in the relevant DNS service.

   If the defined hostnames are not backed by a DNS service, for the purpose of evaluation you may add an entry mapping the
   hostnames and the external IP in the `/etc/hosts` file at the client-side.

   <EXTERNAL-IP> am.wso2.com gateway.am.wso2.com

3. Navigate to the consoles in your browser of choice.

   API Manager Publisher: https://am.wso2.com/publisher
   API Manager DevPortal: https://am.wso2.com/devportal

Please follow these steps to assess Micro Integrator.

1. Obtain the external IP (`EXTERNAL-IP`) of the Ingress resources by listing down the Kubernetes Ingresses.

  kubectl get ing -n default

  Micro Integrator Management APIs

  - NAME: Metadata name of the Kubernetes Ingress resource (defaults to wso2am-pattern-1-mi-1-management-ingress)
  - HOSTS: Hostname of the WSO2 Micro Integrator service (management.mi.wso2.com)
  - ADDRESS: External IP (`EXTERNAL-IP`) exposing the Micro Integrator service to outside of the Kubernetes environment
  - PORTS: Externally exposed service ports of the Micro Integrator service

2. Add the above host as an entry in /etc/hosts file as follows:

    <EXTERNAL-IP>	management.mi.wso2.com

Please refer the official documentation at https://apim.docs.wso2.com/en/latest/ for additional information on WSO2 API Manager.
